name: Docker build and push

on:
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [db, server, client]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set context and dockerfile paths
        id: paths
        run: |
          case "${{ matrix.service }}" in
            db)
              echo "context=./postgres" >> $GITHUB_OUTPUT
              echo "dockerfile=./postgres/Dockerfile" >> $GITHUB_OUTPUT
              ;;
            server)
              echo "context=./server" >> $GITHUB_OUTPUT
              echo "dockerfile=./server/Dockerfile" >> $GITHUB_OUTPUT
              ;;
            client)
              echo "context=./clients" >> $GITHUB_OUTPUT
              echo "dockerfile=./clients/Dockerfile" >> $GITHUB_OUTPUT
              ;;
          esac

      - name: Build and push ${{ matrix.service }} image
        uses: docker/build-push-action@v5
        with:
          context: ${{ steps.paths.outputs.context }}
          file: ${{ steps.paths.outputs.dockerfile }}
          tags: ghcr.io/s-vin/yuki_buy_log:${{ matrix.service }}
          push: true
          cache-from: |
            type=gha,scope=${{ matrix.service }}
            type=registry,ref=ghcr.io/s-vin/yuki_buy_log:${{ matrix.service }}
          cache-to: type=gha,mode=max,scope=${{ matrix.service }}

