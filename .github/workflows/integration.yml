name: Integration tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  integration:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache base Docker images
        uses: actions/cache@v3
        with:
          path: /tmp/docker-images
          key: docker-images-${{ runner.os }}-${{ hashFiles('integration-tests.yml', 'server/Dockerfile', 'integration_tests/Dockerfile') }}
          restore-keys: |
            docker-images-${{ runner.os }}-

      - name: Load cached Docker images
        run: |
          if [ -d "/tmp/docker-images" ] && [ "$(ls -A /tmp/docker-images)" ]; then
            echo "Loading cached Docker images..."
            for image in /tmp/docker-images/*.tar; do
              if [ -f "$image" ]; then
                echo "Loading $(basename $image)..."
                docker load -i "$image" || true
              fi
            done
            docker images
          else
            echo "No cached images found"
          fi

      - name: Pull pre-built images from GHCR for layer caching
        run: |
          echo "Pulling pre-built images from GHCR for layer caching..."
          docker pull ghcr.io/s-vin/yuki_buy_log:server || echo "Server image not found in GHCR, will build from scratch"
          docker pull ghcr.io/s-vin/yuki_buy_log:client || echo "Client image not found in GHCR"

      - name: Pull and save base images
        run: |
          mkdir -p /tmp/docker-images

          # Pull base images
          docker pull postgres:15-alpine || true
          docker pull golang:1.24.3-alpine || true
          docker pull python:3.11-slim || true
          docker pull alpine:3.18 || true

          # Save images for caching (only if not already cached)
          if [ ! -f "/tmp/docker-images/postgres.tar" ]; then
            docker save postgres:15-alpine -o /tmp/docker-images/postgres.tar
          fi
          if [ ! -f "/tmp/docker-images/golang.tar" ]; then
            docker save golang:1.24.3-alpine -o /tmp/docker-images/golang.tar
          fi
          if [ ! -f "/tmp/docker-images/python.tar" ]; then
            docker save python:3.11-slim -o /tmp/docker-images/python.tar
          fi
          if [ ! -f "/tmp/docker-images/alpine.tar" ]; then
            docker save alpine:3.18 -o /tmp/docker-images/alpine.tar
          fi

      - name: Build and cache server image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          file: ./server/Dockerfile
          tags: |
            yuki_buy_log:server-test
            ghcr.io/s-vin/yuki_buy_log:server-ci-${{ github.sha }}
          load: true
          cache-from: |
            type=gha,scope=server
            type=registry,ref=ghcr.io/s-vin/yuki_buy_log:server
          cache-to: type=gha,mode=max,scope=server

      - name: Build and cache test image
        uses: docker/build-push-action@v5
        with:
          context: ./integration_tests
          file: ./integration_tests/Dockerfile
          tags: yuki_buy_log:integration-tests
          load: true
          cache-from: |
            type=gha,scope=tests
          cache-to: type=gha,mode=max,scope=tests

      - name: Run integration tests
        run: |
          docker compose -f integration-tests.yml up \
            --abort-on-container-exit \
            --exit-code-from integration-tests

      - name: Show logs on failure
        if: failure()
        run: |
          echo "=== Server logs ==="
          docker compose -f integration-tests.yml logs server
          echo "=== Test logs ==="
          docker compose -f integration-tests.yml logs integration-tests

      - name: Push server image to GHCR for future caching
        if: success() && github.ref == 'refs/heads/master'
        run: |
          echo "Pushing server image to GHCR for layer caching in future runs..."
          docker tag yuki_buy_log:server-test ghcr.io/s-vin/yuki_buy_log:server
          docker push ghcr.io/s-vin/yuki_buy_log:server
          echo "Server image pushed successfully!"

      - name: Cleanup
        if: always()
        run: docker compose -f integration-tests.yml down -v
