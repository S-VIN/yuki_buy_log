name: Integration tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  SERVER_IMAGE: ghcr.io/s-vin/yuki_buy_log:server-${{ github.sha }}
  TEST_IMAGE: ghcr.io/s-vin/yuki_buy_log:integration-tests-${{ github.sha }}

jobs:
  build-server:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push server image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          file: ./server/Dockerfile
          tags: |
            ${{ env.SERVER_IMAGE }}
            ghcr.io/s-vin/yuki_buy_log:server-latest
          push: true
          cache-from: |
            type=gha,scope=server
            type=registry,ref=ghcr.io/s-vin/yuki_buy_log:server-latest
          cache-to: type=gha,mode=max,scope=server

  build-test-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push test image
        uses: docker/build-push-action@v5
        with:
          context: ./integration_tests
          file: ./integration_tests/Dockerfile
          tags: |
            ${{ env.TEST_IMAGE }}
            ghcr.io/s-vin/yuki_buy_log:integration-tests-latest
          push: true
          cache-from: |
            type=gha,scope=tests
            type=registry,ref=ghcr.io/s-vin/yuki_buy_log:integration-tests-latest
          cache-to: type=gha,mode=max,scope=tests

  unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
          cache: true
          cache-dependency-path: server/go.sum

      - name: Run unit tests
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
        working-directory: server

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        if: always()
        with:
          files: ./server/coverage.txt
          flags: unittests
        continue-on-error: true

  client-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: clients/package-lock.json

      - name: Install dependencies
        working-directory: clients
        run: npm ci

      - name: Lint
        working-directory: clients
        run: npm run lint

      - name: Build
        working-directory: clients
        run: npm run build

  integration-test:
    runs-on: ubuntu-latest
    needs: [build-server, build-test-image]

    steps:
      - uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull built images
        run: |
          echo "Pulling pre-built images from this workflow run..."
          docker pull ${{ env.SERVER_IMAGE }}
          docker pull ${{ env.TEST_IMAGE }}

          # Tag them for docker-compose
          docker tag ${{ env.SERVER_IMAGE }} yuki_buy_log:server-test
          docker tag ${{ env.TEST_IMAGE }} yuki_buy_log:integration-tests

          echo "Images ready:"
          docker images | grep yuki_buy_log

      - name: Run integration tests
        run: |
          docker compose -f integration-tests.yml up \
            --abort-on-container-exit \
            --exit-code-from integration-tests \
            --no-build

      - name: Show logs on failure
        if: failure()
        run: |
          echo "=== Server logs ==="
          docker compose -f integration-tests.yml logs server
          echo "=== Test logs ==="
          docker compose -f integration-tests.yml logs integration-tests
          echo "=== DB logs ==="
          docker compose -f integration-tests.yml logs db

      - name: Cleanup
        if: always()
        run: docker compose -f integration-tests.yml down -v

  publish-images:
    runs-on: ubuntu-latest
    needs: [integration-test]
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Promote images to stable tags
        run: |
          echo "Promoting tested images to stable tags..."

          # Pull SHA-tagged images
          docker pull ${{ env.SERVER_IMAGE }}

          # Tag as stable
          docker tag ${{ env.SERVER_IMAGE }} ghcr.io/s-vin/yuki_buy_log:server

          # Push stable tags
          docker push ghcr.io/s-vin/yuki_buy_log:server

          echo "Images promoted successfully!"
